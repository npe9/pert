C  PROGRAMME SATELLITE
C
      PROGRAM NBODY
C
C  THIS IS A GENERAL N-BODY PROGRAMME WHERE INTER-BODY FORCES BETWEEN
C  BODIES i AND j ARE OF THE FORM CM(i)*CM(j)*F(Rij,Vij) WHERE F IS A 
C  FUNCTION OF Rij, THE DISTANCE BETWEEN THE BODIES, AND Vij, THE 
C  RELATIVE VELOCITIES OF THE TWO BODIES.  
C  THE STRUCTURE OF THE PROGRAMME IS;
C
C  (I)   THE MAIN PROGRAMME "NBODY"IS WHICH INCLUDES THE RUNGE-KUTTA 
C        ROUTINE WITH AUTOMATIC STEP CONTROL.
C  (II)  SUBROUTINE "START" WHICH ENABLES INPUT OF THE INITIAL BOUNDARY
C        CONDITIONS.
C  (III) SUBROUTINE "ACC" WHICH GIVES THE ACCELERATION OF EACH BODY
C        DUE TO ITS INTERACTIONS WITH ALL OTHER BODIES.
C  (IV)  SUBROUTINE "STORE" WHICH STORES INTERMEDIATE COORDINATES AND
C        VELOCITY COMPONENTS AS THE COMPUTATION PROGRESSES.
C  (V)   SUBROUTINE "OUT" WHICH OUTPUTS THE RESULTS TO A DATA FILE.
C                           
C  BY CHANGING THE SUBROUTINES DIFFERENT PROBLEMS MAY BE SOLVED.   
C  THE CM'S CAN BE MASSES OR CHARGES OR BE MADE EQUAL TO UNITY WHILE 
C  THE FORCE LAW CAN BE INVERSE-SQUARE OR ANYTHING ELSE - 
C  e.g. LENNARD-JONES. SEE COMMENT AT BEGINNING OF SUBROUTINE 
C  "ACC" FOR THE TYPES OF FORCE OPERATING. 
C
C  THE FOUR-STEP RUNGE-KUTTA ALGORITHM IS USED. THE RESULTS OF TWO 
C  STEPS WITH TIMESTEP H ARE CHECKED AGAINST TAKING ONE STEP WITH 
C  TIMESTEP 2*H.  IF THE DIFFERENCE IS WITHIN THE TOLERANCE THEN THE 
C  TWO STEPS, EACH OF H, ARE ACCEPTED AND THE STEPLENGTH IS DOUBLED FOR
C  THE NEXT STEP.   HOWEVER, IF THE TOLERANCE IS NOT SATISFIED THEN THE
C  STEP IS NOT ACCEPTED AND ONE TRIES AGAIN WITH A HALVED STEPLENGTH.
C  IT IS ADVISABLE, BUT NOT ESSENTIAL, TO START WITH A REASONABLE 
C  STEPLENGTH; THE PROGRAMME QUICKLY FINDS A SUITABLE VALUE.  
C
C  AS PROVIDED THE PROGRAMME HANDLES UP TO 20 BODIES BUT THIS CAN BE 
C  CHANGED FROM 20 TO WHATEVER IS REQUIRED IN THE DIMENSION STATEMENT.
C
      DIMENSION CM(20),X(20,3),V(20,3),DX(20,3,0:4),DV(20,3,0:4),WT(4),
     +XTEMP(2,20,3),VTEMP(2,20,3),XT(20,3),VT(20,3),DELV(20,3)
      COMMON/A/X,V,TOL,H,TOTIME,DELV,XT,VT,NB,IST,TIME,IG,XTEMP,
     +VTEMP,CM
      DATA WT/0.0,0.5,0.5,1.0/
      IST=0
      OPEN(UNIT=9,FILE='LPT1')
C
C  SETTING THE INITIAL BOUNDARY CONDITION CAN BE DONE EITHER 
C  EXPLICITLY AS VALUES OF (X,Y,Z) AND (U,V,W) FOR EACH BODY OR
C  CAN BE COMPUTED.   THIS IS CONTROLLED BY SUBROUTINE "START".
C  OTHER PARAMETERS ARE ALSO SET IN "START" WHICH ALSO INDICATES
C  SYSTEM OF UNITS BEING USED.
C 
      CALL START       
C
      TIME=0
C  INITIALIZE ARRAYS 
      DO 57 I=1,20
      DO 57 J=1,3
      DO 57 K=0,4
      DX(I,J,K)=0
      DV(I,J,K)=0
   57 CONTINUE
C
C  WE NOW TAKE TWO STEPS WITH STEP LENGTH H FOLLOWED BY ONE STEP
C  WITH STEP LENGTH 2*H FROM THE SAME STARTING POINT BUT FIRST WE
C  STORE THE ORGINAL SPACE AND VELOCITY COORDINATES AND TIMESTEP.
C
   25 DO 7 IT=1,2
      DO 8 J=1,NB
      DO 8 K=1,3
      XTEMP(IT,J,K)=X(J,K)
      VTEMP(IT,J,K)=V(J,K)
    8 CONTINUE
      HTEMP=H
      DO 10 NOSTEP=1,3-IT      
      DO 11 I=1,4
      DO 12 J=1,NB
      DO 12 K=1,3
      XT(J,K)=XTEMP(IT,J,K)+WT(I)*DX(J,K,I-1)
      VT(J,K)=VTEMP(IT,J,K)+WT(I)*DV(J,K,I-1)
   12 CONTINUE
C
      CALL ACC
C
      DO 13 J=1,NB
      DO 13 K=1,3
      DV(J,K,I)=IT*HTEMP*DELV(J,K)
      DX(J,K,I)=IT*HTEMP*VT(J,K)
   13 CONTINUE
   11 CONTINUE
      DO 14 J=1,NB
      DO 14 K=1,3
      XTEMP(IT,J,K)=XTEMP(IT,J,K)+(DX(J,K,1)+DX(J,K,4)+2*
     +(DX(J,K,2)+DX(J,K,3)))/6.0 
      VTEMP(IT,J,K)=VTEMP(IT,J,K)+(DV(J,K,1)+DV(J,K,4)+2*
     +(DV(J,K,2)+DV(J,K,3)))/6.0
   14 CONTINUE
   10 CONTINUE  
    7 CONTINUE
C
C  THE ABOVE HAS MADE TWO STEPS OF H AND, FROM THE SAME STARTING POINT,
C  A SINGLE STEP OF 2*H.   THE RESULTS ARE NOW COMPARED
C
      DO 20 J=1,NB
      DO 20 K=1,3
      IF(ABS(XTEMP(1,J,K)-XTEMP(2,J,K)).GT.TOL)THEN
      H=0.5*H
      GOTO 25
      ENDIF                        
   20 CONTINUE
C
C  AT THIS STAGE THE DOUBLE STEP WITH H AGREES WITHIN TOLERANCE WITH
C  THE SINGLE STEP WITH 2*H.   THE TIMESTEP WILL NOW BE TRIED WITH
C  TWICE THE VALUE FOR THE NEXT STEP.   IF IT IS TOO BIG THEN IT WILL
C  BE REDUCED AGAIN. 
C
      H=2*H
      DO 80 J=1,NB
      DO 80 K=1,3
      X(J,K)=XTEMP(1,J,K)
      V(J,K)=VTEMP(1,J,K)
   80 CONTINUE
      TIME=TIME+H
C
      CALL STORE
C
C GIVE OUTPUT TO MONITOR PASSAGE OF SIMULATED TIME
      help=1000.0
      IF(ABS(MOD(TIME,help)).LT.H)WRITE(6,66)TIME
   66 FORMAT(15H SIMULATED TIME, F9.0)
      IF(TIME.GE.TOTIME)GOTO 50            
      IF(IG.GT.1000)THEN
      IG=1000
      GOTO 50
      ENDIF
      GOTO 25
C
   50 CALL OUT
C
      STOP
      END



      SUBROUTINE STORE
      DIMENSION X(20,3),V(20,3),ASTORE(1000),TSTORE(1000),
     +ESTORE(1000),XTEMP(2,20,3),VTEMP(2,20,3),CM(20),POS(3),
     +VEL(3),XT(20,3),VT(20,3),DELV(20,3)
      COMMON/A/X,V,TOL,H,TOTIME,DELV,XT,VT,NB,IST,TIME,IG,XTEMP,
     +VTEMP,CM
      COMMON/B/D,ECC,EL0,NORIG,ASTORE,TSTORE,ESTORE
      DATA G/6.667E-11/
C
C  THE VALUES OF A AND E ARE CALCULATED EVERY 100 STEPS 
C  AND ARE STORED TOGETHER WITH THE TIME.
C
      IST=IST+1
      IF((IST/100)*100.NE.IST)GOTO 50
      IG=IST/100
      IF(IG.GT.1000)GOTO 50
C
C  FIRST FIND POSITION AND VELOCITY OF CENTRE OF MASS OF THE 
C  SATELLITE.
C
      DO 1 K=1,3
      POS(K)=0
      VEL(K)=0
      DO 2 J=2,NB
      POS(K)=POS(K)+X(J,K)
      VEL(K)=VEL(K)+V(J,K)
    2 CONTINUE
      POS(K)=POS(K)/(NB-1.0)
      VEL(K)=VEL(K)/(NB-1.0)
    1 CONTINUE
C
C  CALCULATE ORBITAL DISTANCE
C
      R=SQRT(POS(1)**2+POS(2)**2+POS(3)**2)
C
C  CALCULATE V**2
C
      V2=VEL(1)**2+VEL(2)**2+VEL(3)**2
C
C  CALCULATE INTRINSIC ENERGY
C
      TOTM=CM(1)+CM(2)+CM(3)+CM(4)
      EN=-G*TOTM/R+0.5*V2      
C
C  CALCULATE SEMI-MAJOR AXIS
C
      ASTORE(IG)=-0.5*G*TOTM/EN
C
C  CALCULATE SQUARE OF INTRINSIC ANGULAR MOMENTUM
C
      D1=POS(2)*VEL(3)-POS(3)*VEL(2)
      D2=POS(3)*VEL(1)-POS(1)*VEL(3)
      D3=POS(1)*VEL(2)-POS(2)*VEL(1)
      H2=D1**2+D2**2+D3**2
C
C  CALCULATE ECCENTRICITY
C
      E2=1.0-H2/G/TOTM/ASTORE(IG)
      IF(E2.LT.0.0)THEN
      WRITE(6,'('' ERROR - E**2 IS NEGATIVE'')')
      STOP
      ENDIF
      ESTORE(IG)=SQRT(E2)
      TSTORE(IG)=TIME           
   50 RETURN
      END


      SUBROUTINE START
      DIMENSION X(20,3),V(20,3),ASTORE(1000),TSTORE(1000),
     +ESTORE(1000),XTEMP(2,20,3),VTEMP(2,20,3),CM(20),XT(20,3),
     +VT(20,3),DELV(20,3)
      COMMON/A/X,V,TOL,H,TOTIME,DELV,XT,VT,NB,IST,TIME,IG,XTEMP,
     +VTEMP,CM
      COMMON/B/D,ECC,EL0,NORIG,ASTORE,TSTORE,ESTORE
      DATA G/6.67E-11/
      OPEN(UNIT=20,FILE='SAT.DAT')
      WRITE(6,'('' INPUT THE NUMBER OF BODIES'')')
      READ(5,*)NB
      WRITE(6,'('' INPUT THE VALUES OF CM; FOR PROGRAMME SATELLITE '')')
      WRITE(6,'('' THEY ARE THE MASS OF EACH BODY IN kg.'')')
      DO 1 I=1,NB
      WRITE(6,100)I
  100 FORMAT(25H READ IN THE VALUE OF CM[,I3, 1H])    
      READ(5,*)CM(I)
    1 CONTINUE
      WRITE(6,'('' INPUT THE INITIAL TIMESTEP IN SECONDS'')')
      READ(5,*)H
      WRITE(6,'('' INPUT THE TOTAL TIME FOR THE SIMULATION '')')
      WRITE(6,'('' IN SECONDS.'')')
      READ(5,*)TOTIME
      WRITE(6,'('' THE CALCULATION CAN BE DONE RELATIVE TO AN '')')
      WRITE(6,'('' ARBITRARY ORIGIN OR WITH RESPECT TO ONE OF '')')
      WRITE(6,'('' THE BODIES AS ORIGIN.   INPUT ZERO FOR AN '')')
      WRITE(6,'('' ARBITRARY ORIGIN OR THE NUMBER OF THE BODY.'')')
      WRITE(6,'('' IF A BODY IS CHOSEN AS ORIGIN THEN ALL ITS'')')
      WRITE(6,'('' POSITIONAL AND VELOCITY VALUES ARE SET TO ZERO'')') 
      READ(5,*)NORIG
C
C  THE USER IS REQUIRED TO SPECIFY A TOLERANCE, THE MAXIMUM ABSOLUTE
C  ERROR THAT CAN BE TOLERATED IN ANY POSITIONAL COORDINATE (X, Y OR Z).  
C  IF THIS IS SET TOO LOW THEN THE PROGRAMME CAN BECOME VERY SLOW.  
C  FOR THIS PROBLEM A TOLERANCE OF 100m SHOULD BE ACCEPTABLE.  
C
      WRITE(6,'('' INPUT THE TOLERANCE IN METRES'')')
      WRITE(6,'('' [SEE COMMENT STATEMENT IN LISTING]'')')
      READ(5,*)TOL
      WRITE(6,'('' INPUT INITIAL DISTANCE OF SATELLITE IN METRES'')')      
      READ(5,*)D
      WRITE(6,'('' INPUT UNSTRETCHED LENGTH OF SPRINGS IN METRES'')')
      READ(5,*)EL0
      WRITE(6,'('' INPUT INITIAL ECCENTRICITY'')')
      READ(5,*)ECC
      DD=0.5*EL0/SQRT(3.0)
      X(1,1)=0
      X(1,2)=0
      X(1,3)=0
      X(2,1)=D-2*DD
      X(2,2)=0
      X(2,3)=0
      X(3,1)=D+DD
      X(3,2)=0.5*EL0
      X(3,3)=0
      X(4,1)=D+DD
      X(4,2)=-0.5*EL0
      X(4,3)=0 
      DIS2=X(2,1)
      DIS3=SQRT(X(3,1)**2+X(3,2)**2)
      ANGLE=ATAN2(X(3,2),X(3,1))
C
C  INITIAL VELOCITIES ARE CALCULATED FOR THE THREE COMPONENTS OF THE 
C  SATELLITE SO THAT THE SPIN ANGULAR VELOCITY OF THE SATELLITE IS
C  APPROXIMATELY EQUAL TO THE ORBITAL ANGULAR VELOCITY.
C 
      VV=SQRT(G*(CM(1)+CM(2)+CM(3)+CM(4))*(1-ECC)/D)
      V(2,2)=VV*DIS2/D
      V(3,2)=VV*DIS3*COS(ANGLE)/D
      V(4,2)=V(3,2)
      V(1,1)=0
      V(1,3)=0
      V(2,1)=0
      V(2,3)=0
      V(3,1)=-VV*DIS3*SIN(ANGLE)/D
      V(4,1)=-V(3,1)
      V(3,3)=0
      V(4,3)=0
      RETURN
      END




      SUBROUTINE ACC
      DIMENSION DELV(20,3),R(3),XT(20,3),VT(20,3),DIF(3),
     +DIFD(3)
      DIMENSION X(20,3),V(20,3),ASTORE(1000),TSTORE(1000),
     +ESTORE(1000),XTEMP(2,20,3),VTEMP(2,20,3),CM(20)
      COMMON/A/X,V,TOL,H,TOTIME,DELV,XT,VT,NB,IST,TIME,IG,XTEMP,
     +VTEMP,CM
      COMMON/B/D,ECC,EL0,NORIG,ASTORE,TSTORE,ESTORE

C
C  IN THIS PROGRAMME NORMAL SI UNITS ARE USED.   THREE KINDS OF FORCE
C  ARE OPERATING.   THE FIRST IS THE NORMAL GRAVITATIONAL INVERSE-SQUARE
C  LAW BETWEEN ALL PAIRS OF BODIES, THE SECOND IS DUE TO THE ELASTICITY
C  OF THE MATERIAL AS MODELLED BY THE SET OF THREE SPRINGS AND THE THIRD
C  OPERATES BETWEEN THE THREE COMPONENT BODIES OF THE SATELLITE AND
C  DEPENDS ON THE RATE AT WHICH THE SPRINGS EXPAND OR CONTRACT.  THE
C  THIRD FORCE PROVIDES THE DISSIPATION IN THE SYSTEM. 
C
C  SET G, SPRING CONSTANT, CAY,AND DISSIPATION CONSTANT, CEE. 
C
      DATA G,CAY,CEE/6.667E-11,3.0E18,1.0E22/
      DO 1 J=1,NB
      DO 1 K=1,3
      DELV(J,K)=0
    1 CONTINUE
C
C  THE FOLLOWING PAIR OF DO LOOPS FINDS INTERACTIONS FOR ALL PAIRS
C  OF BODIES.   ONLY THE GRAVITATIONAL FORCES ARE CONSIDERED IN THIS
C  SECTION
C
      DO 2 J=1,NB-1
      DO 2 L=J+1,NB
      DO 3 K=1,3
      R(K)=XT(J,K)-XT(L,K)
    3 CONTINUE
      RRR=(R(1)**2+R(2)**2+R(3)**2)**1.5
      DO 4 K=1,3
C
C  THE NEXT TWO STATEMENTS GIVE THE CONTRIBUTIONS TO THE THREE
C  COMPONENTS OF ACCELERATION DUE TO BODY J ON BODY L AND DUE TO
C  BODY L ON BODY J.  
C
      DELV(J,K)=DELV(J,K)-G*CM(L)*R(K)/RRR
      DELV(L,K)=DELV(L,K)+G*CM(J)*R(K)/RRR
    4 CONTINUE
    2 CONTINUE
C
C  IF ONE OF THE BODIES IS TO BE THE ORIGIN THEN ITS ACCELERATION IS
C  SUBTRACTED FROM THAT OF ALL OTHER BODIES.
C
      IF(NORIG.EQ.0)GOTO 60
      DO 6 J=1,NB
      DO 6 K=1,3
      DELV(J,K)=DELV(J,K)-DELV(NORIG,K)
    6 CONTINUE
C
C  NOW WE PUT IN THE SPRING AND DISSIPATIVE FORCES
C
      DO 10 I=2,NB-1
      DO 10 J=I+1,NB
      DO 11 K=1,3
      DIF(K)=XT(I,K)-XT(J,K)
   11 CONTINUE
C
C  CALCULATE LENGTH OF SPRING
C
      ELP=SQRT(DIF(1)**2+DIF(2)**2+DIF(3)**2)
C
C  CALCULATE DL/DT
C
      DO 12 K=1,3
      DIFD(K)=VT(I,K)-VT(J,K)
   12 CONTINUE
      DLBDT=(DIF(1)*DIFD(1)+DIF(2)*DIFD(2)+DIF(3)*DIFD(3))/ELP
      FORCE=CAY*(ELP-EL0)+CEE*DLBDT
      DO 13 K=1,3
      DELV(I,K)=DELV(I,K)-FORCE*DIF(K)/ELP/CM(I)
      DELV(J,K)=DELV(J,K)+FORCE*DIF(K)/ELP/CM(J)
   13 CONTINUE   
   10 CONTINUE
   60 RETURN
      END







      SUBROUTINE OUT
      DIMENSION X(20,3),V(20,3),ASTORE(1000),TSTORE(1000),
     +ESTORE(1000),XTEMP(2,20,3),VTEMP(2,20,3),CM(20),XT(20,3),
     +VT(20,3),DELV(20,3)
      COMMON/A/X,V,TOL,H,TOTIME,DELV,XT,VT,NB,IST,TIME,IG,XTEMP,
     +VTEMP,CM
      COMMON/B/D,ECC,EL0,NORIG,ASTORE,TSTORE,ESTORE
C  VALUES OF (ECCENTRICITY, TIME) ARE PLACED IN FILE SAT.DAT IN A FORM
C  SUITABLE FOR INPUT TO A GRAPHICS PACKAGE.
C
      REWIND 20
      DO 60 I=1,IG
      TSTORE(I)=TSTORE(I)/86400.
      WRITE(20,*)ESTORE(I),TSTORE(I)
   60 CONTINUE
C      
      RETURN
      END            

