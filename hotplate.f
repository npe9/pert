      PROGRAM HOTPLATE
***********************************************************************
C  THIS SOLVES PROBLEMS INVOLVING THE THERMAL EQUILIBRIUM IN A
C  PLATE WITH INSULATED TOP AND BOTTOM SURFACES AND BOUNDARIES
C  WHICH ARE AT A FIXED TEMPERATURE,INSULATED OR EXCHANGING
C  HEAT BY CONVECTION OR RADIATION WITH THE OUTSIDE.
C
C  THE PLATE IS DEFINED ON A SQUARE MESH CONTAINED WITHIN A 
C  RECTANGULAR REGION OF NR ROWS AND NC COLUMNS (I.E.(NR-1) X (NC-1)
C  SQUARE ELEMENTS) WITH BOTH NR AND NC <= 10.  ALL SIDES OF THE 
C  PLATE MUST EITHER BE ALONG THE PRINCIPAL DIRECTIONS OF THE MESH 
C  OR AT 45 DEGREES TO THEM.  EACH SIDE OF THE PLATE MUST CONTAIN 
C  AT LEAST THREE POINTS INCLUDING THE END POINTS.
C
C  WHEN INITIAL CONDITIONS ARE SET UP POINTS OUTSIDE THE PLATE ARE 
C  ENTERED AS X, INTERNAL POINTS, THE TEMPERATURES OF WHICH HAVE TO 
C  BE DETERMINED, ARE ENTERED AS U  AND POINTS AT THE BOUNDARY AS 
C      (1) A FIXED TEMPERATURE (AS AN INTEGER <= 10,000) 
C   OR (2) AS I, IF INSULATED 
C   OR (3) AS E, IF EXCHANGING HEAT WITH THE OUTSIDE.  THE BOUNDARY
C          CONDITION IS DESCRIBED BY
C            KAPPA*(D(THETA)/DX) = -K*THETA + S
C          AND VALUES OF K AND S WILL BE INPUT FOR EACH SUCH POINT.  
C
C  THERE IS PROVISION FOR THE PLATE TO BE HEATED (OR COOLED), WHICH
C  REQUIRES THE AMENDMENT OF THE FUNCTION SUBPROGRAM HEAT(X,Y) WHICH
C  GIVES THE RATE OF HEATING PER UNIT VOLUME AS A FUNCTION OF X AND Y.
C  IN ADDITION THE DATA STATEMENT MUST BE CHANGED TO GIVE THE LENGTH
C  OF THE SIDE OF THE SQUARE GRID, H, AND THE CONDUCTIVITY OF THE
C  PLATE, CAPPA.   THE COORDINATES (X,Y) ARE REFERRED TO THE POINT
C  (I,J) = (1,1) AS ORIGIN
C
C  THE METHOD OF SOLUTION IS GAUSS-SEIDEL WITH SEQUENTIAL OVER-RELAXATION.
************************************************************************
      DIMENSION IP(0:12,0:12),Q(0:12,0:12),IJ(0:12,0:12),KK(5),
     +JI(0:12,0:12),IGNORE(-1:1,-1:1),EXTEMP(11,11),D(0:12,0:12),
     +BOUND(11,11,2)
      CHARACTER EX(60)*1,STAN*15,CN*60,ANS*1
      OPEN(UNIT=9,FILE='LPT1')
      STAN='0123456789 XUIE'
      DATA H,CAPPA/0.125,400.0/
C INITIALLY INDICATE ALL POINTS AS OUTSIDE PLATE
      DO 55 I=0,12
      DO 55 J=0,12
      IP(I,J)=1
      Q(I,J)=-1
   55 CONTINUE
C INITIALIZE ARRAY EXTEMP
      IOUT=6
   95 WRITE(6,'(''DO YOU WANT PRINTED OUTPUT? [Y/N]'')')
      READ(5,750)ANS
  750 FORMAT(A1)
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 97
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')THEN
      IOUT=9
      GOTO 97
      ENDIF
      GOTO 95
   97 DO 56 I=1,11
      DO 56 J=1,11
   56 EXTEMP(I,J)=1.0E35   
      WRITE(6,'(''ARE YOU SURE THAT FUNCTION SUBPROGRAM "HEAT"'')')
      WRITE(6,'(''AND VALUES OF "H" AND "CAPPA" ARE CORRECT '')')
      WRITE(6,'(''FOR THIS "HOTPLATE" APPLICATION? IF SO THEN'')')
      WRITE(6,'(''ENTER NUMBER OF ROWS AND COLUMNS IN MESH'')')
      READ(5,*)NR,NC
C  THE CHARACTERISTICS OF THE PLATE ARE NOW ENTERED
      DO 1 I=1,NR
      WRITE(6,'('' '')')
      WRITE(6,50)I
   50 FORMAT(31H ENTER INFORMATION FOR GRID ROW,I3)
      WRITE(6,'(''X IF POINT IS OUTSIDE PLATE'')')
      WRITE(6,'(''TEMPERATURE ON THE BOUNDARY [INTEGER<=10000]'')')
      WRITE(6,'(''I IF INSULATED ON BOUNDARY'')')
      WRITE(6,'(''E IF A BOUNDARY POINT EXCHANGING HEAT WITH THE '')')
      WRITE(6,'(''OUTSIDE.'')')
      WRITE(6,'(''U IF WITHIN THE PLATE AND TO BE DETERMINED'')')
      READ(5,100)CN
  100 FORMAT(A60)
      DO 60 NX=1,60
      EX(NX)=CN(NX:NX)
   60 CONTINUE
      IT=0
      DO 2 J=1,NC
    3 IT=IT+1   
      K=INDEX(STAN,EX(IT))-1
C  TEST OF ILLEGAL CHARACTER
      IF(K.LT.0)GOTO 999
C  TEST FOR BLANK
      IF(K.EQ.10)GOTO 3
C  TEST FOR X - POINT OUTSIDE PLATE
      IF(K.EQ.11)THEN
      IP(I,J)=1
      Q(I,J)=-1
      GOTO 2
      ENDIF
C  TEST FOR U - INTERIOR POINT OF PLATE
      IF(K.EQ.12)THEN
      IP(I,J)=0
      Q(I,J)=0
      GOTO 2
      ENDIF
C  TEST FOR I - INSULATED BOUNDARY POINT
      IF(K.EQ.13)THEN
      IP(I,J)=2
      Q(I,J)=0
      GOTO 2
      ENDIF
C  TEST FOR POINT EXCHANGING HEAT WITH THE OUTSIDE
      IF(K.EQ.14)THEN
      IP(I,J)=4
      Q(I,J)=0
      GOTO 2
      ENDIF
C  TEST FOR NON-DIGIT OR ILLEGAL CHARACTER
      IF(K.GT.9)GOTO 999
      IF(K.LT.0)GOTO 999
C  THE CHARACTER MUST BE A DIGIT
      M=0
    4 M=M+1
      KK(M)=K   
C  READ NEXT DIGIT OR BLANK
      IT=IT+1
      K=INDEX(STAN,EX(IT))-1
C  TEST FOR ILLEGAL CHARACTER
      IF(K.LT.0)GOTO 999
C  TEST IF X, U OR E IS ILLEGALLY COMBINED WITH A DIGIT
      IF(K.GT.10)GOTO 999
C  TEST FOR BLANK WHICH IS END OF NUMBER ENTRY
      IF(K.LE.9)GOTO 4
      IP(I,J)=3
      Q(I,J)=0
      DO 6 L=1,M
      Q(I,J)=Q(I,J)+KK(L)*10**(M-L)
    6 CONTINUE              
    2 CONTINUE
    1 CONTINUE 
C  READ IN VALUES OF K AND S FOR THE DIFFERENTIAL BOUNDARY POINTS
      DO 64 I=1,NR
      DO 64 J=1,NC
      IF(IP(I,J).NE.4)GOTO 64
      WRITE(6,700)I,J
  700 FORMAT(38H READ IN VALUES OF K AND S FOR POINT [,I2,1H ,I2,1H])
      READ(5,*)BOUND(I,J,1),BOUND(I,J,2)
   64 CONTINUE      
C  SET UP EQUIVALENT-TEMPERATURE POINTS FOR THE 'GHOST' POINTS
C  REQUIRED TO ESTABLISH REQUIRED SLOPE AT INSULATED BOUNDARY.
      DO 30 I=1,NR
      DO 30 J=1,NC
      IF((IP(I,J)-2)*(IP(I,J)-4).NE.0)GOTO 30
C  AN INSULATED OR HEAT-EXCHANGING BOUNDARY POINT HAS BEEN IDENTIFIED.
C  LOOK FOR NEIGHBOURING BOUNDARY POINTS.
      DO 29 II=-1,1
      DO 29 JJ=-1,1
   29 IGNORE(II,JJ)=0
      DO 31 II=-1,1
      DO 31,JJ=-1,1
      IF(II.EQ.0.AND.JJ.EQ.0)GOTO 31
      IF(IGNORE(II,JJ).EQ.1)GOTO 31
      IF(IP(I+II,J+JJ).LT.2)GOTO 31
C  TEST THAT POINTS ARE NEIGHBOURS ON THE SAME SIDE
      IF(IP(I+2*II,J+2*JJ).LT.2.AND.IP(I-II,J-JJ).LT.2)GOTO 31
C  A NEIGHBOURING BOUNDARY POINT HAS BEEN IDENTIFIED
C  ELIMINATE CONSIDERATION OF POINT ON OTHER SIDE OF (I,J) WHICH WILL
C  GIVE THE SAME 'GHOST' POINT
      IGNORE(-II,-JJ)=0
C  FIND THE 'GHOST' POINT(S) OUTSIDE THE PLATE
      IF(II*JJ.EQ.0)THEN
C  THE BOUNDARY IS PARALLEL TO A PRINCIPAL DIRECTION
      D(I,J)=2.0
      IA=IABS(II)
      JA=IABS(JJ)
      IF(IP(I+JA,J+IA).EQ.1)GOTO 33
      IJ(I-JA,J-IA)=I+JA
      JI(I-JA,J-IA)=J+IA
      D(I-JA,J-IA)=2.0
      GOTO 31
   33 IJ(I+JA,J+IA)=I-JA
      JI(I+JA,J+IA)=J-IA
      D(I+JA,J+IA)=2.0
      GOTO 31
      ENDIF
C  THE BOUNDARY IS AT 45 DEGREES TO PRINCIPAL DIRECTIONS
      D(I,J)=SQRT(2.0)
      IXJ=II*JJ
      IF(IP(I+1,J).NE.1)GOTO 35
      IJ(I+1,J)=I
      JI(I+1,J)=J+IXJ
      D(I+1,J)=SQRT(2.0)
      GOTO 36
   35 IF(IP(I,J+IXJ).NE.1)GOTO 36
      IJ(I,J+IXJ)=I+1
      JI(I,J+IXJ)=J
      D(I,J+IXJ)=SQRT(2.0)
   36 IF(IP(I-1,J).NE.1)GOTO 37
      IJ(I-1,J)=I
      JI(I-1,J)=J-IXJ
      D(I-1,J)=SQRT(2.0)
      GOTO 31
   37 IF(IP(I,J-IXJ).NE.1)GOTO 31
      IJ(I,J-IXJ)=I-1
      JI(I,J-IXJ)=J  
      D(I,J-IXJ)=SQRT(2.0)
   31 CONTINUE                                      
   30 CONTINUE
      WRITE(6,'(''INPUT TOLERANCE - 0.01 WILL USUALLY SUFFICE'')')
      READ(5,*)TOL
      WRITE(6,'(''INPUT OVER-RELAXATION FACTOR [ 1 TO 2 ]'')')
      READ(5,*)W
C  THE SOLUTION ITERATION NOW COMMENCES. MAXIMUM NUMBER OF CYCLES = 1000
      ICYCLE=0
   12 ICYCLE=ICYCLE+1
      IF(ICYCLE.GT.1000)GOTO 20
      DIF=0
      DO 11 I=1,NR
      DO 11 J=1,NC
      IF(IP(I,J)*(IP(I,J)-2)*(IP(I,J)-4).NE.0)GOTO 11
C  A POINT WHOSE TEMPERATURE IS TO BE DETERMINED HAS BEEN IDENTIFIED.
      X=(I-1)*H
      Y=(J-1)*H
      EST=HEAT(X,Y)*H*H/CAPPA/4.0
      DO 66 IN=-1,1
      DO 66 JN=-1,1
      IF(IN.EQ.0.AND.JN.EQ.0)GOTO 66
      IF(IN*JN.NE.0)GOTO 66
C  THE NEIGHBOURING POINT BEING TAKEN IS ALONG A PRINCIPAL DIRECTION.
      IF(IP(I+IN,J+JN).EQ.1)THEN
C  THE NEIGHBOURING POINT IS OUTSIDE THE PLATE AND THE TEMPERATURE
C  IS FOUND TO GIVE THE CORRECT BOUNDARY CONDITIONS.
      IM=IJ(I+IN,J+JN)
      JM=JI(I+IN,J+JN)
      EST=EST+0.25*Q(IM,JM)      
      ADD=0 
      IF(EXTEMP(I,J).LT.1.0E34)THEN
C  THE SURFACE IS EXCHANGING HEAT WITH THE SURROUNDINGS.  THE
C  TEMPERATURE OF THE FALSE POINT IS FOUND FROM THE GRADIENT
C  FIRST FIND THE TEMPERATURE HALF WAY BETWEEN FALSE AND INTERIOR
C  POINT.
      IF(MOD(IM+I+IN,2).EQ.1)THEN
C  THE HALF-WAY POINT IS IN THE MIDDLE OF AN ELEMENT
      AM=FLOAT(IM+I+IN)/2.0
      BM=FLOAT(JM+J+JN)/2.0
      I1=AM+0.5*IN*JN+0.1
      I2=AM-0.5*IN*JN+0.1
      J1=BM+0.5*IN*JN+0.1
      J2=BM-0.5*IN*JN+0.1
      TEMP=0.5*(Q(I1,J1)+Q(I2,J2))
      GOTO 87
      ENDIF
      TEMP=Q((IM+I+IN)/2,(JM+J+JN)/2)
   87 ADD=(-BOUND(I,J,1)*TEMP+BOUND(I,J,2))*H*D(I+IN,J+JN)/CAPPA
      ENDIF
      EST=EST+ADD
      GOTO 66
      ENDIF
      EST=EST+0.25*Q(I+IN,J+JN)
   66 CONTINUE       
      Z=W*(EST-Q(I,J))
      Q(I,J)=Q(I,J)+Z
      IF(ABS(Z).GT.DIF)DIF=ABS(Z)
   11 CONTINUE
      IF(DIF.GT.TOL)GOTO 12
   20 WRITE(IOUT,500)TOL
      WRITE(IOUT,550)W
      WRITE(IOUT,600)ICYCLE
  500 FORMAT(17H THE TOLERANCE IS,F9.5)
  550 FORMAT(33H THE OVER-RELAXATION PARAMETER IS,F6.2)
  600 FORMAT(24H THE NUMBER OF CYCLES IS,I5)
      WRITE(IOUT,'('' '')')
      DO 15 I=1,NR
      WRITE(IOUT,300)(Q(I,J),J=1,NC)   
  300 FORMAT(11F6.0)
      WRITE(IOUT,'('' '')')
      WRITE(IOUT,'('' '')')
   15 CONTINUE
      GOTO 998
  999 WRITE(6,'('' ILLEGAL CHARACTER - PROGRAM TERMINATED'')')
  998 STOP
      END
   
      FUNCTION HEAT(X,Y)
      HEAT=0
      END

