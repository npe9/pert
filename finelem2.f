      PROGRAM FINELEM
C  THIS PROGRAM GIVES A FINITE-ELEMENT SOLUTION OF THE PROBLEM OF A 
C  HEATED PLATE INSULATED ON ITS TOP AND BOTTOM SURFACES WITH ALL
C  ELEMENTS TRIANGULAR.   DIFFERENTIAL BOUNDARY CONDITIONS ARE
C  SPECIFIED BY     
C           CAPPA*(D(THETA)/D(N)) = -M*THETA + S
C  WHERE N IS ALONG THE DIRECTION OF THE NORMAL TO THE SURFACE.
C  VALUES OF M AND S ARE INPUT AND SO ARE ESTIMATED BEFORE THE
C  PROGRAM IS USED.  SOME NODES, USUALLY AT BOUNDARIES, CAN BE 
C  SPECIFIED AS HAVING FIXED TEMPERATURES.   THERE IS PROVISION FOR
C  AN EXTENDED SOURCE OF HEAT WHICH IS GIVEN BY A FUNCTION STATEMENT
C  Q(x,y).   IF SUCH A SOURCE IS PRESENT THEN THE USER MUST ENSURE 
C  THAT IT GIVES THE REQUIRED FORM OF HEATING.   THERE IS ALSO 
C  PROVISION FOR UP TO 9 POINT SOURCES WHICH MUST BE SITUATED AT NODES.  
C
      DIMENSION NDE(100,3),X(100),Y(100),AREA(100),A(100,3),B(100,3),
     +C(100,3),NF(50),TF(50),IETN(50),NTE(50),NEDGE(50,2),CAY(50),
     +SS(50),NP(50),SPS(50),RHS(100),STIFF(100,100),SIDE(50),
     +NTEMP(50),TTEMP(50)
      CHARACTER ANS*1
      ICHANGE=0
  545 WRITE(6,'('' '')')    
      WRITE(6,'('' WARNING WARNING WARNING WARNING WARNING'')')      
      WRITE(6,'('' '')')
      WRITE(6,'(''IF THERE IS AN EXTENDED HEAT SOURCE YOU MUST'')')
      WRITE(6,'(''CONFIRM THAT YOUR EXTENDED HEAT SOURCE FUNCTION'')')
      WRITE(6,'(''STATEMENT IS CORRECT [Y/N]. IF NOT THEN ABORT THE'')')
      WRITE(6,'(''PROGRAM, CORRECT ROUTINE AND RE-COMPILE'')')
      WRITE(6,'(''IF THERE IS NO EXTENDED HEAT SOURCE THEN IT DOES'')')
      WRITE(6,'(''NOT MATTER WHAT THE FUNCTION STATEMENT CONTAINS.'')')
      READ(5,50)ANS      
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 547
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 544
      GOTO 545
C  INPUT CONDUCTIVITY OF THE PLATE      
  547 INP=5
  546 WRITE(6,'(''DATA CAN BE INPUT EITHER FROM THE KEYBOARD OR'')')
      WRITE(6,'(''FROM A DATA FILE "FINELEM.DAT" PREPARED BY THE'')')
      WRITE(6,'(''PROGRAM "FINDATA".  DO YOU WANT INPUT VIA A DATA'')')  
      WRITE(6,'(''FILE? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 543
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')THEN
      OPEN(UNIT=11,FILE='FINELEM.DAT')
      INP=11
      GOTO 543
      ENDIF
      GOTO 546
  543 IF(INP.EQ.11)GOTO 444 
      WRITE(6,'(''READ IN CONDUCTIVITY'')')
  444 READ(INP,*)CAPPA
      IOUT=0
  121 WRITE(6,'(''DO YOU WANT PRINTED OUTPUT? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 120
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')THEN
      IOUT=1
      OPEN(UNIT=9,FILE='LPT1')
      GOTO 120
      ENDIF
      GOTO 121
  120 IF(INP.EQ.11)GOTO 445
      WRITE(6,'(''INPUT NUMBER OF ELEMENTS AND NUMBER OF NODES'')')
  445 READ(INP,*)NE,NN
      DO 1 I=1,NE
      IF(INP.EQ.11)GOTO 461
      WRITE(6,100)I
  100 FORMAT(38H ENTER 3 NODE NUMBERS DEFINING ELEMENT,I2)
  461 READ(INP,*)(NDE(I,J),J=1,3)
    1 CONTINUE    
      IF(INP.EQ.11)GOTO 446
      WRITE(6,'(''ENTER COORDINATES OF NODES'')')
  446 DO 2 I=1,NN
      IF(INP.EQ.11)GOTO 448
      WRITE(6,200)I,I
  200 FORMAT(9H ENTER x[,I2,8H] AND y[,I2,1H])
  448 READ(INP,*)X(I),Y(I)
    2 CONTINUE   
C  THE AREA OF EACH ELEMENT IS CALCULATED AS ARE THE VALUES OF 
C  A, B AND C [Equation(6.66b)] FOR EACH NODE.
  497 DO 3 I=1,NE
      DO 3 J=1,3
      M1=NDE(I,J)
      M2=NDE(I,1)
      M3=NDE(I,2)
      IF(J.EQ.1)THEN
      M2=NDE(I,2)
      M3=NDE(I,3)
      ENDIF
      IF(J.EQ.2)THEN
      M2=NDE(I,3)
      M3=NDE(I,1)
      ENDIF
      A(I,J)=X(M2)*Y(M3)-X(M3)*Y(M2)
      B(I,J)=Y(M2)-Y(M3)
      C(I,J)=X(M3)-X(M2)
      AREA(I)=ABS((A(I,J)+X(M1)*B(I,J)+Y(M1)*C(I,J))/2.0)
    3 CONTINUE
      IF(ICHANGE.EQ.1)GOTO 498
C  CLEAR ARRAYS CONTAINING INFORMATION ABOUT FIXED-TEMPERATURE NODES
      DO 6 I=1,50
      NF(I)=0
      TF(I)=0
    6 CONTINUE
      IF(INP.EQ.11)GOTO 449
      WRITE(6,'(''ENTER NUMBER OF NODES WITH FIXED TEMPERATURES'')')
  449 READ(INP,*)NFT
      IF(NFT.EQ.0)GOTO 5
      DO 4 I=1,NFT
      IF(INP.EQ.11)GOTO 460
      WRITE(6,'(''READ IN NODE NUMBER, FIXED TEMPERATURE'')')
  460 READ(INP,*)K,T
      NF(K)=1
      TF(K)=T
    4 CONTINUE
C  SINCE NODES WITH FIXED TEMPERATURES DO NOT LEAD TO EQUATIONS NODE
C  NUMBERS ARE NOW LINKED TO EQUATION NUMBERS AND VICE-VERSA.
    5 NEQ=0
      DO 7 I=1,NN
      IF(NF(I).EQ.1)GOTO 7
      NEQ=NEQ+1
      IETN(NEQ)=I
    7 CONTINUE
C  NEQ IS NOW THE NUMBER OF EQUATIONS TO BE GENERATED.   THE Kth 
C  EQUATION IS LINKED WITH VARIATIONAL PARAMETER THETA(IETN(K))
C
C  NOW CLEAR TABLE NTE
      DO 8 I=1,NN
      NTE(I)=0
    8 CONTINUE 
C  NOW GENERATE TABLE NTE SUCH THAT NTE(K)=0 IF NODE K IS AT CONSTANT
C  TEMPERATURE NODE OTHERWISE NTE(K) GIVES THE EQUATION ASSOCIATED
C  WITH NODE K.       
      DO 9 I=1,NEQ
      K=IETN(I)
      NTE(K)=I
    9 CONTINUE            
   12 WRITE(6,'(''IS THERE AN EXTENDED HEAT SOURCE [Y/N] ?'')')
      IQ=0
      READ(5,50)ANS
   50 FORMAT(A1)
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 10
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 11      
      GOTO 12
   11 IQ=1
   10 IF(INP.EQ.11)GOTO 451
      WRITE(6,'(''ENTER THE NUMBER OF POINT SOURCES'')')
  451 READ(INP,*)IP
      IF(IP.EQ.0)GOTO 13
      DO 14 I=1,IP
      IF(INP.EQ.11)GOTO 452
      WRITE(6,'(''GIVE NODE AND STRENGTH OF POINT SOURCE [W/M**3]'')')
  452 READ(INP,*)NP(I),SPS(I)
   14 CONTINUE
C  NOW BOUNDARY CONDITIONS ARE TO BE ENTERED. THE EDGES ARE IDENTIFIED
C  BY THE TERMINATING NODES OF EACH ELEMENT SIDE.   THE VALUES OF M
C  AND S ARE REQUIRED FOR EACH EDGE.
   13 IF(INP.EQ.11)GOTO 453
      WRITE(6,'(''HOW MANY EDGES OF ELEMENTS HAVE BOUNDARY '')')
      WRITE(6,'(''CONDITIONS OF THE FORM '')')
      WRITE(6,'('' D(THETA)/D(N) = -M*THETA + S ?'')')    
  453 READ(INP,*)NBC
      IF(NBC.EQ.0)GOTO 16
      DO 15 I=1,NBC
      IF(INP.EQ.11)GOTO 454
      WRITE(6,'(''READ IN THE EDGE AS THE TWO END NODES AND THE '')')
      WRITE(6,'(''VALUES OF M AND S'')')
  454 READ(INP,*)NEDGE(I,1),NEDGE(I,2),CAY(I),SS(I)
C CALCULATE THE LENGTH OF THE EDGE
      K1=NEDGE(I,1)
      K2=NEDGE(I,2)
      SIDE(I)=SQRT((X(K1)-X(K2))**2+(Y(K1)-Y(K2))**2)
   15 CONTINUE
      WRITE(6,'(''THERE IS NOW AN OPPORTUNITY TO EXAMINE MOST OF'')')
      WRITE(6,'(''DATA WHICH HAS BEEN ENTERED AND TO CORRECT IT'')')
      WRITE(6,'(''IF NECESSARY. THIS IS ADVISABLE IF THE ENTERED'')')
      WRITE(6,'(''DATA ARE EXTENSIVE.'')')
      WRITE(6,'(''  '')')
  107 WRITE(6,'(''DO YOU WANT TO CHECK THE NODE NUMBERS DEFINING'')')
      WRITE(6,'(''ELEMENTS WITH A VIEW TO CORRECTION? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 117
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 106
      GOTO 107
  106 WRITE(6,450)(I,(NDE(I,J),J=1,3),I=1,NE)
  450 FORMAT(3(I7,I6,2I3))
  112 WRITE(6,'(''  '')')
      WRITE(6,'(''DO YOU WANT TO CHANGE ANY OF THESE? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 117
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 111
      GOTO 112     
  111 ICHANGE=1
      WRITE(6,'(''  '')')
      WRITE(6,'(''ENTER ELEMENT NUMBER + THREE NODE NUMBERS'')')
      READ(5,*)NEL,(NDE(NEL,J),J=1,3)
      GOTO 107
  117 WRITE(6,'(''  '')')
      WRITE(6,'(''DO YOU WANT TO CHECK THE COORDINATES OF THE'')')
      WRITE(6,'(''NODES WITH A VIEW TO CORRECTION? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 137
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 116
      GOTO 117
  116 WRITE(6,550)(I,X(I),Y(I),I=1,NN)
  550 FORMAT(3(I7,2F8.4))
  122 WRITE(6,'(''  '')')
      WRITE(6,'(''DO YOU WANT TO CHANGE ANY OF THESE? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 137
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 131
      GOTO 122     
  131 ICHANGE=1
      WRITE(6,'(''  '')')
      WRITE(6,'(''ENTER NODE NUMBER + X AND Y COORDINATES'')')
      READ(5,*)NOD,X(NOD),Y(NOD)
      GOTO 117
  137 IF(ICHANGE.EQ.1)GOTO 497
  498 IF(NFT.EQ.0)GOTO 135
      WRITE(6,'(''  '')')
      WRITE(6,'(''DO YOU WANT TO CHECK THE NODES WITH FIXED'')')
      WRITE(6,'(''TEMPERATURES WITH A VIEW TO CORRECTION? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 135
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 136
      GOTO 137
  136 WRITE(6,650)(I,TF(I),I=1,NN)
  650 FORMAT(4(I7,F6.1))
      WRITE(6,'(''  '')')
      WRITE(6,'(''IF THE SECOND COLUMN NUMBER IS ZERO THEN'')')
      WRITE(6,'(''THE TEMPERATURE IS NOT FIXED'')')
  132 WRITE(6,'(''  '')')
      WRITE(6,'(''DO YOU WANT TO CHANGE ANY OF THESE? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 135
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 141
      GOTO 132     
  141 WRITE(6,'(''  '')')
      WRITE(6,'(''ENTER, NODE NUMBER AND TEMPERATURE.  IF YOU '')')
      WRITE(6,'(''WISH TO CANCEL A FIXED TEMPERATURE ALLOCATION'')')
      WRITE(6,'(''THEN ENTER MINUS NODE NUMBER PLUS ZERO.'')')
      READ(5,*)I,TT
      IF(I.LT.0)THEN
      I=-I
      NF(I)=0
      TF(I)=0
      GOTO 137
      ENDIF
      TF(I)=TT
      NF(I)=1
      GOTO 137
  135 IF(IP.EQ.0)GOTO 155
      WRITE(6,'(''  '')')
      WRITE(6,'(''DO YOU WANT TO CHECK THE NODES WHICH ARE POINT'')')
      WRITE(6,'(''SOURCES WITH A VIEW TO CORRECTION? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 155
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 156
      GOTO 135
  156 DO 154 I=1,IP
      WRITE(6,750)NP(I),SPS(I)
  750 FORMAT(I4,E9.4)
  154 CONTINUE
  152 WRITE(6,'(''  '')')
      WRITE(6,'(''DO YOU WANT TO CHANGE ANY OF THESE? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 155
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 161
      GOTO 152     
  161 WRITE(6,'(''  '')')
      WRITE(6,'(''ENTER LIST POSITION, NODE AND STRENGTH OF'')')
      WRITE(6,'(''SOURCE.'')')
      READ(5,*)I,NP(I),SPS(I)
      GOTO 135
  155 IF(NBC.EQ.0)GOTO 16
      WRITE(6,'(''  '')')
      WRITE(6,'(''DO YOU WANT TO CHECK THE EDGES CORRESPONDING'')')
      WRITE(6,'(''DIFFERENTIAL BOUNDARY CONDITIONS WITH A VIEW'')')
      WRITE(6,'(''TO CORRECTION? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 16
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 176
      GOTO 155
  176 DO 174 I=1,NBC
      WRITE(6,850)NEDGE(I,1),NEDGE(I,2),CAY(I),SS(I)
  850 FORMAT(2I4,2E12.4)
  174 CONTINUE
  172 WRITE(6,'(''  '')')
      WRITE(6,'(''DO YOU WANT TO CHANGE ANY OF THESE? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 16
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 181
      GOTO 172     
  181 WRITE(6,'(''  '')')
      WRITE(6,'(''ENTER LIST POSITION, NODES DEFINING EDGE AND'')')
      WRITE(6,'(''VALUES OF M AND S.'')')
      READ(5,*)I,NEDGE(I,1),NEDGE(I,2),CAY(I),SS(I)
      GOTO 155
C  THE INPUT IS NOW COMPLETE AND THE PROCESS OF BUILDING UP THE STIFFNESS
C  MATRIX AND THE RIGHT-HAND-SIDE VECTOR CAN COMMENCE.
C
C  BEFORE THAT, IF PRINTING HAS BEEN SPECIFIED, THE INPUT DATA WILL BE
C  PRINTED.
   16 IF(IOUT.NE.1)GOTO 17
      WRITE(9,870)CAPPA
  870 FORMAT(17H CONDUCTIVITY IS ,F6.1,18H W m**[-1] K**[-1])
      WRITE(9,'(''  '')')
      WRITE(9,'(''NODE NUMBERS ASSOCIATED WITH EACH ELEMENT'')')   
      WRITE(9,960)(I,(NDE(I,J),J=1,3),I=1,NE)
  960 FORMAT(3(I7,I6,2I4))
      WRITE(9,'(''  '')')
      WRITE(9,'(''COORDINATES OF NODES'')')
      WRITE(9,950)(I,X(I),Y(I),I=1,NN)
  950 FORMAT(3(I6,F7.4,F7.4))
      IF(NFT.EQ.0)GOTO 830
      WRITE(9,'(''  '')')
      WRITE(9,'(''NODES WITH FIXED TEMPERATURES'')')
      NY=0
      DO 760 I=1,NN
      IF(NF(I).EQ.0)GOTO 760
      NY=NY+1
      NTEMP(NY)=I
      TTEMP(NY)=TF(I)
  760 CONTINUE
      WRITE(9,970)(NTEMP(I),TTEMP(I),I=1,NY)
  970 FORMAT(4(I6,F7.1))
      WRITE(9,'(''  '')')
  830 IF(IP.EQ.0)GOTO 840
      WRITE(9,'(''POSITIONS AND STRENGTHS OF POINT SOURCES'')')
      DO 745 I=1,IP
      WRITE(9,980)NP(I),SPS(I)
  745 CONTINUE
  980 FORMAT(I6,E13.4)
      WRITE(9,'(''  '')')
  840 IF(NBC.EQ.0)GOTO 17
      WRITE(9,'(''DIFFERENTIAL BOUNDARY EDGES AND PARAMETERS'')')
      WRITE(9,'('' NODE1 NODE2     M        S'')')
      WRITE(9,875)(NEDGE(I,1),NEDGE(I,2),CAY(I),SS(I),I=1,NBC)
  875 FORMAT(I5,I6,F8.3,F10.3)
      WRITE(9,'(''  '')')
C  CLEAR ARRAYS
C  DIVIDE THE VALUES OF M AND S BY CAPPA
   17 DO 115 I=1,NBC
      CAY(I)=CAY(I)/CAPPA
      SS(I)=SS(I)/CAPPA
  115 CONTINUE
      DO 19 I=1,100
      RHS(I)=0
      DO 19 J=1,100
      STIFF(I,J)=0
   19 CONTINUE   
C  FIRST DEAL WITH ELEMENT DERIVATIVES.
      DO 20 I=1,NE
      DO 20 J=1,3
      K=NDE(I,J)
      IF(NF(K).EQ.1)GOTO 20
C  NODE K CORRESPONDS TO A VARIATIONAL PARAMETER. FIND THE EQUATION
C  IT GENERATES.             
      KE=NTE(K)
      STIFF(KE,KE)=STIFF(KE,KE)+0.25*(B(I,J)**2+C(I,J)**2)/AREA(I)
      DO 21 L=1,2
      JJ=MOD(J+L,3)
      IF(JJ.EQ.0)JJ=3
      K=NDE(I,JJ)
      IF(NF(K).EQ.1)THEN
      Z=0.25*TF(K)*(B(I,J)*B(I,JJ)+C(I,J)*C(I,JJ))/AREA(I)
      RHS(KE)=RHS(KE)-Z
      GOTO 21
      ENDIF
      KF=NTE(K)
      Z=0.25*(B(I,J)*B(I,JJ)+C(I,J)*C(I,JJ))/AREA(I)
      STIFF(KE,KF)=STIFF(KE,KF)+Z
   21 CONTINUE
   20 CONTINUE
C  THE EXTENDED HEATING WILL BE ADDED AS THOUGH IT IS CONSTANT IN
C  EACH ELEMENT WITH A VALUE EQUAL TO THE AVERAGE AT THE THREE NODES
      IF(IQ.EQ.0)GOTO 30
      DO 23 I=1,NE
      I1=NDE(I,1)
      I2=NDE(I,2)
      I3=NDE(I,3)
      QAV=(Q(X(I1),Y(I1))+Q(X(I2),Y(I2))+Q(X(I3),Y(I3)))/3.0
      Z=QAV*AREA(I)/3.0/CAPPA
      IF(NF(I1).EQ.1)GOTO 24
      K=NTE(I1)
      RHS(K)=RHS(K)+Z
   24 IF(NF(I2).EQ.1)GOTO 25
      K=NTE(I2)
      RHS(K)=RHS(K)+Z
   25 IF(NF(I3).EQ.1)GOTO 23
      K=NTE(I3)
      RHS(K)=RHS(K)+Z
   23 CONTINUE
C ADD CONTRIBUTIONS OF DIFFERENTIAL BOUNDARY CONDITIONS
   30 IF(NBC.EQ.0)GOTO 60
      DO 31 I=1,NBC
      DO 31 L=1,2
      IF(NF(NEDGE(I,L)).EQ.1)GOTO 31
      KE=NTE(NEDGE(I,L))
      STIFF(KE,KE)=STIFF(KE,KE)-CAY(I)*SIDE(I)/3.0
      IF(NF(NEDGE(I,3-L)).EQ.0)THEN
      KF=NTE(NEDGE(I,3-L))
      STIFF(KE,KF)=STIFF(KE,KF)-CAY(I)*SIDE(I)/6.0
      GOTO 31
      ENDIF      
      RHS(KE)=RHS(KE)+CAY(I)*SIDE(I)*TF(NEDGE(I,3-L))/6.0
   31 CONTINUE
      DO 41 I=1,NBC
      DO 41 L=1,2
      IF(NF(NEDGE(I,L)).EQ.1)GOTO 41
      KE=NTE(NEDGE(I,L))
      RHS(KE)=RHS(KE)+SS(I)*SIDE(I)/2.0
   41 CONTINUE      
C  NOW ADD POINT SOURCES
   60 IF(IP.EQ.0)GOTO 61
      DO 62 I=1,IP
      KE=NTE(NP(I))
      RHS(KE)=RHS(KE)+SPS(I)/CAPPA
   62 CONTINUE       
C  AT THIS POINT THE EQUATIONS HAVE BEEN SET UP AND MUST NOW BE SOLVED
   61 CALL GAUSSJ(STIFF,NEQ,100,RHS,1,1)
C  ASSIGN TEMPERATURES TO ALL NODES
      NS=0
      DO 101 I=1,NN
      IF(NF(I).EQ.1)THEN
      SPS(I)=TF(I)
      GOTO 101
      ENDIF
      NS=NS+1
      SPS(I)=RHS(NS)
  101 CONTINUE
      NOUT=6
  102 WRITE(NOUT,300)
  300 FORMAT(6H NODE ,6H  TEMP)
      WRITE(NOUT,400)(I,SPS(I),I=1,NN)
  400 FORMAT(4(I4,F8.0))
      IF(IOUT.EQ.1)THEN
      NOUT=9
      IOUT=0
      GOTO 102
      ENDIF
  544 STOP
      END

      FUNCTION Q(X,Y)
      Q=1.0E3
      END

      SUBROUTINE GAUSSJ(A,N,NP,B,M,MP)
      PARAMETER (NMAX=50)
      DIMENSION A(NP,NP),B(NP,MP),IPIV(NMAX),INDXR(NMAX),INDXC(NMAX)
      DO 11 J=1,N
        IPIV(J)=0
11    CONTINUE
      DO 22 I=1,N
        BIG=0.
        DO 13 J=1,N
          IF(IPIV(J).NE.1)THEN
            DO 12 K=1,N
              IF (IPIV(K).EQ.0) THEN
                IF (ABS(A(J,K)).GE.BIG)THEN
                  BIG=ABS(A(J,K))
                  IROW=J
                  ICOL=K
                ENDIF
              ELSE IF (IPIV(K).GT.1) THEN
                PAUSE 'Singular matrix'
              ENDIF
12          CONTINUE
          ENDIF
13      CONTINUE
        IPIV(ICOL)=IPIV(ICOL)+1
        IF (IROW.NE.ICOL) THEN
          DO 14 L=1,N
            DUM=A(IROW,L)
            A(IROW,L)=A(ICOL,L)
            A(ICOL,L)=DUM
14        CONTINUE
          DO 15 L=1,M
            DUM=B(IROW,L)
            B(IROW,L)=B(ICOL,L)
            B(ICOL,L)=DUM
15        CONTINUE
        ENDIF
        INDXR(I)=IROW
        INDXC(I)=ICOL
        IF (ABS(A(ICOL,ICOL)).LT.1.0E-30) PAUSE 'Singular matrix.'
        PIVINV=1./A(ICOL,ICOL)
        A(ICOL,ICOL)=1.
        DO 16 L=1,N
          A(ICOL,L)=A(ICOL,L)*PIVINV
16      CONTINUE
        DO 17 L=1,M
          B(ICOL,L)=B(ICOL,L)*PIVINV
17      CONTINUE
        DO 21 LL=1,N
          IF(LL.NE.ICOL)THEN
            DUM=A(LL,ICOL)
            A(LL,ICOL)=0.
            DO 18 L=1,N
              A(LL,L)=A(LL,L)-A(ICOL,L)*DUM
18          CONTINUE
            DO 19 L=1,M
              B(LL,L)=B(LL,L)-B(ICOL,L)*DUM
19          CONTINUE
          ENDIF
21      CONTINUE
22    CONTINUE
      DO 24 L=N,1,-1
        IF(INDXR(L).NE.INDXC(L))THEN
          DO 23 K=1,N
            DUM=A(K,INDXR(L))
            A(K,INDXR(L))=A(K,INDXC(L))
            A(K,INDXC(L))=DUM
23        CONTINUE
        ENDIF
24    CONTINUE
      RETURN
      END
