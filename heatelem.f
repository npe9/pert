      PROGRAM HEATELEM
C  AN APPLICATION OF THE FINITE-ELEMENT METHOD TO A HEATED UNIFORM
C  ROD.   THE ROD IS OF LENGTH L AND ITS MATERIAL HAS THERMAL
C  CONDUCTIVITY KAPPA.   THE ENDS OF THE ROD CAN BE AT A CONSTANT 
C  TEMPERATURE, INSULATED OR EXPOSED TO AN EXTERNAL TEMPERATURE.
C  THERE IS PROVISION FOR HEAT SOURCES AND SINKS WHICH CAN BE
C  EXTENDED AND DESCRIBED BY THE SUBROUTINE SOURCE(X,Q) OR BE 
C  A POINT SOURCE OR SINK AT A NODE.
      REAL A(3,199),LL,KAPPA,C(199),X(7),W(7),Y(199),
     +YY(0:200),END(2),XC(0:200)
      DIMENSION KK(5)
      CHARACTER ANS*1,STAN*13,CN*6,EX(6)*1
C  DATA FOR 7-POINT GAUSS INTEGRATION
      DATA X/0.025446,0.1292344,0.2970774,0.5,0.7029226,0.8707656,
     +0.974554/
      DATA W/0.0647425,0.1398527,0.190915,0.2089796,0.190915,
     +0.1398527,0.0647425/
      STAN='0123456789 IE'
   30 WRITE(6,'('' IF YOUR PROGRAM HAS AN EXTENDED SOURCE OR SINK'')')
      WRITE(6,'('' THEN THE SUBROUTINE SOURCE PROVIDES THIS.  IF'')')
      WRITE(6,'('' YOU HAVE FORGOTTEN TO AMEND THIS THEN ABORT THE'')')
      WRITE(6,'('' PROGRAM.  IF THERE IS AN EXTENDED SOURCE AND IT'')')
      WRITE(6,'('' IS CORRECTLY PROVIDED THEN TYPE "Y".   IF THERE'')')
      WRITE(6,'('' IS NO EXTENDED SOURCE THEN TYPE "N".'')')
      WRITE(6,'(''  '')')
      WRITE(6,'('' MAKE A NOTE OF THE FORM OF HEATING OR COOLING IN'')')
      WRITE(6,'('' SUBROUTINE SOURCE.  IT IS NOT ECHO-PRINTED'')')
      READ(5,50)ANS
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')THEN
      IS=1
      GOTO 31
      ENDIF
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')THEN
      IS=0
      GOTO 31
      ENDIF
      GOTO 30
C  DEFINE THE STEFAN CONSTANT
   31 SIG=5.667E-8
C  INPUT THE LENGTH OF THE ROD AND THE VALUE OF KAPPA
      LL=1.0
      KAPPA=400
      WRITE(6,'('' THE LENGTH OF THE ROD IS SET AT 1m AND ITS '')')
      WRITE(6,'('' THERMAL CONDUCTIVITY AT 400 Wm(**-1)K(**-1).'')')
      WRITE(6,'('' DO YOU WANT TO CHANGE THIS? [Y/N]'')')
   10 READ(5,50)ANS
   50 FORMAT(A1)
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 11
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 12
      GOTO 10
   12 WRITE(6,'(''READ IN REQUIRED VALUES OF THE LENGTH OF '')')
      WRITE(6,'(''THE ROD AND ITS CONDUCTIVITY.'')')
      READ(5,*)LL,KAPPA
   11 WRITE(6,'(''READ IN THE NUMBER OF ELEMENTS IN THE ROD'')')
      READ(5,*)N
C  CALCULATE ELEMENT LENGTH
      H=LL/N
C  DECIDE ON FORM OF OUTPUT
      WRITE(6,'(''THE FINAL TEMPERATURES CAN BE OUTPUT ON THE'')')
      WRITE(6,'(''SCREEN AND/OR ON THE PRINTER AND/OR AS A DATA'')')
      WRITE(6,'(''FILE FOR INPUT TO A GRAPHICS PACKAGE.'')')
      WRITE(6,'(''IF THERE ARE MANY ELEMENTS THE SCREEN WILL NOT'')')
      WRITE(6,'(''ACCOMMODATE SUFFICIENT DATA.'')')
      WRITE(6,'('' '')')
   60 WRITE(6,'(''DO YOU WANT SCREEN OUTPUT? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 61
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 62
      GOTO 60
   61 IOS=0
      GOTO 63
   62 IOS=1
      WRITE(6,400)LL,KAPPA
  400 FORMAT(15HLENGTH OF ROD  ,F5.2,14H  CONDUCTIVITY,F8.1)
   63 WRITE(6,'(''DO YOU WANT PRINTED OUTPUT? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 64
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 65
      GOTO 63
   64 IOP=0
      GOTO 66
   65 OPEN(UNIT=9,FILE='LPT1')
      WRITE(9,400)LL,KAPPA
      IOP=1
   66 WRITE(6,'(''DO YOU WANT A DATA FILE? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 67
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 68
      GOTO 66
   67 IOD=0
      GOTO 69
   68 OPEN(UNIT=10,FILE='FINEL.DAT')
      IOD=1
      WRITE(6,'(''PLEASE NOTE - OUTPUT FILE IS "FINEL.DAT"'')')
C  CLEAR TABLE WHICH WILL HOLD THE STIFFNESS MATRIX
   69 DO 1 I=1,3
      DO 1 J=1,N-1
      A(I,J)=0
    1 CONTINUE
C  CLEAR TABLE HOLDING RIGHT-HAND-SIDE VECTOR
      DO 21 J=1,N-1
      C(J)=0
   21 CONTINUE
C  ADD VALUES OF -1/H AND 2/H TO STIFFNESS MATRIX
      DO 2 J=1,N-1
      IF(J.EQ.1)GOTO 3
      A(1,J)=-1/H
    3 A(2,J)=2/H
      IF(J.EQ.N-1)GOTO 2
      A(3,J)=-1/H
    2 CONTINUE
C  SET THE BOUNDARY CONDITIONS
      DO 5 I=0,1
      MK=I*(N-2)+1
      MKE=I*N
      WRITE(6,'(''NOTE:IF THERE IS A RADIATING BOUNDARY THEN'')')
      WRITE(6,'(''ABSOLUTE TEMPERATURES MUST BE USED'')')
      WRITE(6,'(''  '')')
      WRITE(6,300)I+1
  300 FORMAT(24HINPUT BOUNDARY CONDITION,I2)     
      WRITE(6,'(''IF AT CONSTANT TEMPERATURE THEN INPUT TEMPERATURE'')')
      WRITE(6,'(''IF INSULATED INPUT "I"'')')
      WRITE(6,'(''IF EXPOSED TO AN EXTERNAL TEMPERATURE TX THEN '')')
      WRITE(6,'(''INPUT ETX - e.g. E1000 [<=5 CHARACTERS] '')')
   75 FORMAT(A5)
      READ(5,75)CN
      IF(IOS.EQ.0)GOTO 86
      WRITE(6,500)I+1,CN
      WRITE(6,'(''  '')')
  500 FORMAT(18HBOUNDARY CONDITION,I2,4H IS ,A6)
   86 IF(IOP.EQ.0)GOTO 87
      WRITE(9,500)I+1,CN
   87 DO 6 J=1,6
      EX(J)=CN(J:J)
    6 CONTINUE
      IT=0
    8 IT=IT+1
      K=INDEX(STAN,EX(IT))-1
C  TEST FOR ILLEGAL CHARACTER
      IF(K.LT.0)GOTO 900
C  TEST FOR BLANK
      IF(K.EQ.10)GOTO 8
C  TEST FOR INSULATED END
      IF(K.NE.11)GOTO 19
C  THE END IS INSULATED. ADD TERM TO STIFFNESS MATRIX
      A(2,MK)=A(2,MK)-1/H      
C  INDICATE TYPE OF END CONDITION
      END(I+1)=1.0E6        
      GOTO 5
C  TEST FOR EXPOSED END
   19 IF(K.NE.12)GOTO 37
C  THE END IS EXPOSED
      IT=IT+1
C  TEST FOR NON-DIGIT OR ILLEGAL CHARACTER)
      K=INDEX(STAN,EX(IT))-1
      IF(K.GT.9.OR.K.LT.0)GOTO 900
C  THE NEXT CHARACTER IS A DIGIT
      M=0
   13 M=M+1
      KK(M)=K                                  
C  READ NEXT DIGIT OR BLANK
      IT=IT+1
      K=INDEX(STAN,EX(IT))-1               
C  TEST FOR NON-DIGIT OR ILLEGAL CHARACTER
      IF(K.GT.10.OR.K.LT.0)GOTO 900
C  TEST FOR BLANK WHICH IS END OF NUMBER ENTRY
      IF(K.LT.10)GOTO 13
C  BLANK REACHED SO TEMPERATURE NOW READ IN
      EXTEMP=0
      DO 15 L=1,M
      EXTEMP=EXTEMP+KK(L)*10**(M-L)
   15 CONTINUE
      CAY=4*SIG*EXTEMP**3                                        
      RAT=KAPPA/(KAPPA+H*CAY)
C  ADD TERM TO STIFFNESS MATRIX        
      A(2,MK)=A(2,MK)-RAT/H
C  ADD TERM TO RIGHT HAND SIDE
      C(MK)=C(MK)+(1-RAT)/H*EXTEMP
C  INDICATE THE END CONDITION
      END(I+1)=-1.0E6
      GOTO 5   
C  THE END IS AT A FIXED TEMPERATURE
   37 M=0
   16 M=M+1
      KK(M)=K
C  READ NEXT DIGIT OR BLANK
      IT=IT+1
      K=INDEX(STAN,EX(IT))-1
C  TEST FOR ILLEGAL CHARACTER
      IF(K.GT.10)GOTO 900
C  TEST FOR BLANK WHICH IS END OF NUMBER ENTRY
      IF(K.LE.9)GOTO 16
C  NUMBER ENTRY COMPLETE
      T=0
      DO 17 L=1,M
      T=T+KK(L)*10**(M-L)
   17 CONTINUE
C  ADD TERM TO RIGHT-HAND-SIDE VECTOR
      C(MK)=C(MK)+T/H
      END(I+1)=T
    5 CONTINUE
C  CHECK TO SEE IF THERE IS AN EXTENDED SOURCE OR SINK                     
      IF(IS.EQ.0)GOTO 40
C  THERE IS AN EXTENDED SOURCE OR SINK.   THE CONTRIBUTIONS TO THE
C  RIGHT-HAND-SIDE VECTOR WILL BE FOUND BY GAUSS 7-POINT QUADRATURE.
      DO 41 I=1,N-1
C  FIND LOWER LIMIT FOR QUADRATURE
      XL=(I-1)*H
C  CARRY OUT GAUSS QUADRATURE
      SUM=0
      DO 42 J=1,7
      XX=XL+2*X(J)*H
      CALL SOURCE(XX,Q)
      SUM=SUM+Q*W(J)
   42 CONTINUE
      C(I)=C(I)+2*SUM*H/KAPPA
   41 CONTINUE
C  EXTENDED SOURCE OR SINK CONTRIBUTION COMPLETE
C  NOW CHECK FOR A POINT SOURCE OR SINK
   40 WRITE(6,'(''IS THERE A POINT SOURCE OR SINK? [Y/N]'')')
      READ(5,50)ANS
      IF(ANS.EQ.'N'.OR.ANS.EQ.'n')GOTO 51
      IF(ANS.EQ.'Y'.OR.ANS.EQ.'y')GOTO 52
      GOTO 40
   52 WRITE(6,'(''READ IN SOURCE STRENGTH "WATTS PER METRE CUBED".'')')
      WRITE(6,'(''AND THE NODE AT WHICH IT OCCURS'')')
      READ(5,*)Q,J
      IF(IOS.EQ.0)GOTO 98
      WRITE(6,600)Q,J
  600 FORMAT(23HPOINT SOURCE STRENGTH  ,E8.2,8H AT NODE,I4)
   98 IF(IOP.EQ.0)GOTO 99
      WRITE(9,600)Q,J    
   99 C(J)=C(J)+Q/KAPPA
C  THE EQUATIONS HAVE NOW BEEN SET UP
   51 CALL TRIDIAG(A,C,Y,N-1)   
C  BUILD UP COMPLETE TABLE OF TEMPERATURES
      DO 90 I=1,2
      M=N*(I-1)
      IF(END(I).LT.9E5.AND.END(I).GT.-9E5)THEN
      YY(M)=END(I)
      GOTO 90
      ENDIF
      MM=(I-1)*(N-2)+1
      IF(END(I).GT.9E5)THEN
      YY(M)=Y(MM)
      GOTO 90
      ENDIF
C  MUST BE AN EXPOSED END
      YY(M)=RAT*Y(MM)+(1-RAT)*EXTEMP      
   90 CONTINUE
      DO 91 I=1,N-1
      YY(I)=Y(I)
   91 CONTINUE
C  OUTPUT SECTION
  200 FORMAT(6(I4,F6.0))
      IF(IOS.EQ.0)GOTO 70
      WRITE(6,200)(I,YY(I),I=0,N)
   70 IF(IOP.EQ.0)GOTO 71
      WRITE(9,200)(I,YY(I),I=0,N)
   71 IF(IOD.EQ.0)GOTO 1000
      DO 80 I=0,N
      XC(I)=I*H
   80 CONTINUE
      DO 81 I=0,N
      WRITE(10,*)XC(I),YY(I)
   81 CONTINUE
      CLOSE(10)
      GOTO 1000
  900 WRITE(6,'('' ILLEGAL CHARACTER - PROGRAM ABORTED'')')
 1000 STOP
      END           

      SUBROUTINE SOURCE(X,Q)
      Q=0
      RETURN
      END


      SUBROUTINE TRIDIAG(A,C,Y,N)
C  THIS PROGRAMME SOLVES A SET OF LINEAR EQUATIONS Ay = c WHERE
C  A IS A TRIDIAGONAL MATRIX.
C  THE PARAMETER MAX SETS THE MAXIMUM NUMBER OF EQUATIONS.
      PARAMETER (MAX=200)
      REAL WORK(MAX),A(3,N),C(N),Y(N)
C  FORWARD SUBSTITUTION
      DIV=A(2,1)
      IF(ABS(DIV).LT.1.0E-16)GOTO 50
      Y(1)=C(1)/DIV
      DO 1 I=2,N
      WORK(I)=A(3,I-1)/DIV
      DIV=A(2,I)-A(1,I)*WORK(I)
      IF(ABS(DIV).LT.1.0E-16)GOTO 50
      Y(I)=(C(I)-A(1,I)*Y(I-1))/DIV
    1 CONTINUE
C  BACK SUBSTITUTION
      DO 2 I=N-1,1,-1
      Y(I)=Y(I)-WORK(I+1)*Y(I+1)
    2 CONTINUE
      GOTO 60
   50 WRITE(6,'('' THE TRIDIAGONAL ALGORITHM HAS NOT WORKED BECAUSE'')')
      WRITE(6,'('' IT HAS DEVELOPED A ZERO DIVISOR. SINCE REALISTIC'')')
      WRITE(6,'('' PHYSICAL PROBLEMS SHOULD HAVE SOLUTIONS THIS IS '')')
      WRITE(6,'('' UNEXPECTED.    CHECK THE MAIN PROGRAMME.'')')
      STOP
   60 RETURN
      END        
