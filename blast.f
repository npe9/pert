C
C     A one-dimensional Lagrangian code using the von Neumann-
C     Richtmyer algorithm to calculate the dynamics of a simple
C     blast wave propogating in a cold gas.
C     The calculation is performed to compare with the self-similar
C     model of Sedov and Taylor.
C     The calculation may be performed for a planar, cylindical or
C     spherical blast wave.
C
      COMMON /BKIT/ IT,IOUT
      COMMON /BKDATA/ GAMA,GAMA2
      COMMON /ARTVIS/ QP(200)
      COMMON /DENS/ RHOB(200),RHOA(200),DM(200),DMT(200)
      COMMON /ENER/ EB(200),EA(200)
      COMMON /INCRE/ DT,DTA,DTB,DTC,DTD
      COMMON /INIT/ JM,JMP1,ID
      COMMON /RADIAL/ RB(200),RA(200),R2B(200),R2A(200)
      COMMON /TIM/ TIME,TTIME,TOTOUT,TOUT
      COMMON /TOT/ EKINB,EKINA,EINTB,EINTA,ETOTB,ETOTA,ERROR
      COMMON /VALUE/ RHO,EIN,ROUT,DIM
      COMMON /VEL/ UA(200),FJ(200)
      OPEN (21,FILE='BLAST.DAT')
      OPEN (22,FILE='BLAST.OUT')
      OPEN (30,FILE='BLAST0.GRA')
      OPEN (31,FILE='BLAST1.GRA')
      OPEN (32,FILE='BLAST2.GRA')
      OPEN (33,FILE='BLAST3.GRA')
      OPEN (34,FILE='BLAST4.GRA')
      OPEN (35,FILE='BLAST5.GRA')
      OPEN (36,FILE='BLAST6.GRA')
      OPEN (37,FILE='BLAST7.GRA')
      OPEN (38,FILE='BLAST8.GRA')
      OPEN (39,FILE='BLAST9.GRA')
      IOUT=0
      CALL INPUT
      CALL SET
    1 CALL OUTPUT
      CALL TIMING
      CALL ACCLN
      CALL RADIUS
      CALL DENSTY
      CALL VISTY
      CALL ENERGY
      CALL TOTEN
      CALL UPDATE
      IT=IT+1
      IF (TIME.LE.TTIME) GO TO 1
      call output
      STOP
      END


      SUBROUTINE INPUT
C
C  READS THE INPUT CONDITIONS
C
      COMMON /INCRE/ DTIME,DTA,DTB,DTC,DTD
      COMMON /INIT/ JM,JMP1,ID
      COMMON /TIM/ TIME,TTIME,TOTOUT,TOUT
      COMMON /VALUE/ RHO,EIN,ROUT,DIM
      COMMON /BKDATA/ GAMA,GAMA2
      READ (21,1000) JM,ID
 1000 FORMAT (2I6)
      READ (21,1001) RHO,EIN,ROUT,GAMA
 1001 FORMAT (4E11.3)
      READ (21,1002) DTIME,TTIME,TOUT
 1002 FORMAT (3E11.3)
      WRITE (22,1101) DTIME,TTIME,TOUT,EIN,ROUT,RHO,GAMA,JM,ID
 1101 FORMAT(1H0,4X,'INITIAL TIME STEP',E11.3,4X,'TOTAL RUN TIME',E11.3,
     14X,'OUTPUT INTERVAL',E11.3/5X,'TOTAL ENERGY :',E11.3,4X,
     2'OUTER RADIUS : ',E11.3/5X,'INITIAL DENSITY :',E11.3/5X,'GAMMA :',
     3E11.3/5X,'NO OF CELLS :',I4/5X,'DIMENSION COEFFICIENT',I6)
      RETURN
      END



      SUBROUTINE SET
C
C  SETS THE CONSTANT TERMS IN THE FLOW AND INITIALISES THE VARIABLES
C
      COMMON /DENS/ RHOB(200),RHOA(200),DM(200),DMT(200)
      COMMON /ENER/ EB(200),EA(200)
      COMMON /INIT/ JM,JMP1,ID
      COMMON /PRES/ P(200)
      COMMON /RADIAL/ RB(200),RA(200),R2B(200),R2A(200)
      COMMON /TIM/ TIME,TTIME,TOTOUT,TOUT
      COMMON /TOT/ EKINB,EKINA,EINTB,EINTA,ETOTB,ETOTA,ERROR
      COMMON /VALUE/ RHO,EIN,ROUT,DIM
      COMMON /BKDATA/ GAMA,GAMA2
      COMMON /BKGRAP/ ALPHA,RHOSH,RHOLT
      JMP1=JM+1
      DIM=FLOAT(IABS(ID))
      ALPHA=SQRT(EIN/RHO)
      IF ((ID.EQ.3).AND.(ABS(GAMA-1.4).LT.1.0E-3))
     1ALPHA=1.083974169*ALPHA
      RMOVE=1.2*(ALPHA*TTIME)**(2.0/(3.0+FLOAT(id)))
      IF (ROUT.lt.RMOVE) ROUT=RMOVE
      IF (ID.EQ.2) EIN=0.159154943*EIN
      if (ID.EQ.3) EIN=0.079577471*EIN
      RHOLT=RHO+RHO
      RHOSH=(GAMA+1.0)/(GAMA-1.0)*RHO
      GAMA=GAMA-1.0
      GAMA2=0.5*GAMA
      TOTOUT=0.0
      IF ((JM.EQ.1).OR.(ID.LT.0)) THEN
      BETA=2.0*ROUT/(FLOAT(JM)*FLOAT(JMP1))
      DR1=0.5*BETA
      J=1
      RA(1)=0.0
      DO 10 J1=2,JMP1
      DR0=DR1
      DR1=BETA*(FLOAT(J)-0.5)
      DR=0.5*(DR0+DR1)
      RA(J1)=RA(J)+DR
      RHOA(J)=RHO
      RHOB(J)=RHO
   10 J=J1
      ELSE
      DR=ROUT/FLOAT(JM)
      RA(1)=0.0
      J=1
      DO 11 J1=2,JMP1
      RA(J1)=RA(J)+DR
      RHOA(J)=RHO
      RHOB(J)=RHO
   11 J=J1
      ENDIF
      ID=IABS(ID)-1
      DO 2 J=2,JMP1
    2 R2A(J)=RA(J)**ID
      DO 3 J=1,JMP1
      R2B(J)=R2A(J)
    3 RB(J)=RA(J)
      RHO0=0.0
      DO 4 J=1,JM
      RHO1=RA(J+1)*R2A(J+1)
      DM(J)=RHOA(J)*(RHO1-RHO0)/DIM
    4 RHO0=RHO1
      DM(JMP1)=0.0
      RHOA(JMP1)=0.0
      RHOB(JMP1)=0.0
      EA(1)=EIN/DM(1)
      EB(1)=EA(1)
      ETOTA=EIN
      RETURN
      END



      SUBROUTINE OUTPUT
C
C  OUTPUT THE FLOW VARIABLES
C
      DIMENSION R0(200),E0(200),V0(200),D0(200)
      COMMON /ARTVIS/ QP(200)
      COMMON /DENS/ RHOB(200),RHOA(200),DM(200),DMT(200)
      COMMON /ENER/ EB(200),EA(200)
      COMMON /INCRE/ DT,DTA,DTB,DTC,DTD
      COMMON /INIT/ JM,JMP1,ID
      COMMON /RADIAL/ RB(200),RA(200),R2B(200),R2A(200)
      COMMON /TIM/ TIME,TTIME,TOTOUT,TOUT
      COMMON /TOT/ EKINB,EKINA,EINTB,EINTA,ETOTB,ETOTA,ERROR
      COMMON /VALUE/ RHO,EIN,ROUT,DIM
      COMMON /VEL/ UA(200),FJ(200)
      COMMON /BKDATA/ GAMA,GAMA2
      COMMON /BKIT/ IT,IOUT
      COMMON /BKGRAP/ ALPHA,RHOSH,RHOLT
      SAVE R0,E0,V0,D0
      SAVE RB0,TIME0
      DATA R0/200*0.0/,E0/200*0.0/,V0/200*0.0/,D0/200*0.0/
      DATA RB0/0.0/,TIME0/0.0/
C  PLOT BLAST WAVE POSITION
      IF ((TIME.GT.1.0E-20).AND.(TIME.LT.TTIME)) THEN
      JJ=JM
      DO 10 J=2,JM
      JJ=JJ-1
      IF (RHOA(JJ).GT.RHOLT) THEN
      XJ1=FLOAT(JJ)-0.5+(RHOLT-RHOA(JJ))/(RHOA(JJ+1)-RHOA(JJ))
      GO TO 11
      ENDIF
   10 CONTINUE
      XJ1=0.5
   11 RB1=XJ1/FLOAT(JM)*ROUT
      TIME0=TIME
      RB0=RB1
      ENDIF
      IF (TIME.LT.TOTOUT) RETURN
C  PRINT OUT FULL DATA REPORT
      IOUT=IOUT+1
      WRITE (22,20)IT,TIME,RB1,ETOTA,EKINA,EINTA,ERROR
   20 FORMAT(14H1ITERATION NO.,I8,4X,4HTIME,1PE14.6,'BLAST WAVE RADIUS', 
     + 1PE12.4//
     18H ENERGY:,5X,5HTOTAL,1PE11.3,3X,7HKINETIC,
     21PE11.3,3X,7HTHERMAL,1PE11.3,5X,5HERROR,1PE11.3//
     41H ,3X,8HCELL NO.,5X,6HRADIUS,7X,8HVELOCITY,5X,7HDENSITY,5X,
     59HINT ENER.,4X,9HART.VISC.)
      DO 2 J=1,JMP1
    2 WRITE(22,21) J,RA(J),UA(J),RHOA(J),EA(J),QP(J)
   21 FORMAT(4X,I4,3X,1PE14.6,1P5E13.3)
      WRITE(22,22) DTD,DTC,DTA
   22 FORMAT(10H0TIME STEP,5X,4HCOMP,1PE11.3,5X,3HCFL,1PE11.3,
     15X,5HFINAL,1PE11.3)
      TOTOUT=TOTOUT+TOUT
      IF ((TIME.LT.1.0E-20).OR.(TIME.GT.TTIME)) GOTO 40
      U0=RB1/TIME
      EE0=(GAMA+1.0)/GAMA*((U0/(3.0+FLOAT(ID)))**2)
      DO 4 J=1,JM
       R0(J)=0.5*(RA(J)+RA(J+1))/RA(JMP1)
       D0(J)=RHOA(J)/RHOSH
       V0(J)=0.5*(UA(J)+UA(J+1))/U0
       E0(J)=EA(J)/EE0
    4 CONTINUE
C  PRODUCE FILES FOR UP TO 10 GRAPHICAL OUTPUTS
   40 IF(IOUT.GT.10)RETURN
      M=29+IOUT
      DO 30 I=1,JMP1
      WRITE(M,*)RA(I),RHOA(I),UA(I),EA(I)
   30 CONTINUE   
      RETURN
      END


      SUBROUTINE TIMING
C
C  TIME STEP ADJUSTMENT
C
      COMMON /DENS/ RHOB(200),RHOA(200),DM(200),DMT(200)
      COMMON /ENER/ EB(200),EA(200)
      COMMON /INCRE/ DT,DTA,DTB,DTC,DTD
      COMMON /INIT/ JM,JMP1,ID
      COMMON /RADIAL/ RB(200),RA(200),R2B(200),R2A(200)
      COMMON /PRES/ P(200)
      COMMON /TOT/ EKINB,EKINA,EINTB,EINTA,ETOTB,ETOTA,ERROR
      COMMON /VALUE/ RHO,EIN,ROUT,DIM
      COMMON /VEL/ UA(200),FJ(200)
C
C  THE TIME STEP ADJUSTMENT IS PERFORMED IN FOUR PARTS
C
C     THE TIME STEP MAY INCREASE BY A FACTOR OF 2
      DTD=DT+DT
      DTC=DTD*DTD
C  THE COURANT-LEWY-FRIEDRICHS CONDITION
      DO 1 J=1,JM
      SPEED2=10.0*P(J)/RHOA(J)
      help=1.0e-10
      DT1=(RA(J+1)-RA(J))**2 /MAX(help,SPEED2)
      DTC=AMIN1(DT1,DTC)
   1  CONTINUE
      DTC=SQRT(DTC)
C  THE DENSITY INCREASE IS NOT ALLOWED TO EXCEED 0.1
      J=1
      DO 2 J1=2,JM
      DT1=0.1*(RA(J1)-RA(J))/MAX(help,ABS(UA(J1)-UA(J)))
      DTD=AMIN1(DT1,DTD)
    2 J=J1
      DTB=AMIN1(DTC,DTD)
      IF (DTB.GT.DTA.AND.DTB.LT.1.999*DTA) DTB=DTA
      DT=0.5*(DTA+DTB)
      RETURN
      END


      SUBROUTINE ACCLN
C
C  VELOCITY INCREMENTAL CALCULATION
C
      COMMON /ARTVIS/ QP(200)
      COMMON /DENS/ RHOB(200),RHOA(200),DM(200),DMT(200)
      COMMON /ENER/ EB(200),EA(200)
      COMMON /INIT/ JM,JMP1,ID
      COMMON /PRES/ P(200)
      COMMON /RADIAL/ RB(200),RA(200),R2B(200),R2A(200)
      COMMON /INCRE/ DT,DTA,DTB,DTC,DTD
      COMMON /VEL/ UA(200),FJ(200)
      COMMON /BKIT/ IT,IOUT
      DATA T/0.0/
C
C     THE VELOCITY INCREMENTS ARE CALCULATED
C
      IF (IT.NE.0) T=(DTA-DTB)/(4.0*DTA)
      FORCE=0.0
      J1=JMP1
      J=JMP1
      DO 1 JJ=1,JM
      J=J-1
      FORCE1=P(J)+QP(J)
      FORCE=2.0*R2A(J1)*(FORCE-FORCE1)/(DM(J)+DM(J1))
      UA(J1)=UA(J1)-((1.0-T)*FORCE+T*FJ(J1))*DT
      FJ(J1)=FORCE
      FORCE=FORCE1
    1 J1=J
      UA(1)=0.0
      DT=DTB
      DTA=DTB
      RETURN
      END

      SUBROUTINE RADIUS
C
C   CALCULATES THE RADIAL INCREMENTS
C
      COMMON /INIT/ JM,JMP1,ID
      COMMON /RADIAL/ RB(200),RA(200),R2B(200),R2A(200)
      COMMON /INCRE/ DT,DTA,DTB,DTC,DTD
      COMMON /VEL/ UA(200),FJ(200)
      DO 1 J=2,JMP1
      RB(J)=RA(J)+UA(J)*DT
      R2B(J)=RB(J)**ID
    1 CONTINUE
      RETURN
      END


      SUBROUTINE DENSTY
C
C  CALCULATES THE DENSITY
C
      COMMON /DENS/ RHOB(200),RHOA(200),DM(200),DMT(200)
      COMMON /INIT/ JM,JMP1,ID
      COMMON /INCRE/ DT,DTA,DTB,DTC,DTD
      COMMON /RADIAL/ RB(200),RA(200),R2B(200),R2A(200)
      COMMON /VALUE/ RHO,EIN,ROUT,DIM
      RHO0=0.0
      J=1
      DO 1 J1=2,JMP1
      RHO1=RB(J1)*R2B(J1)
      RHOB(J)=DIM*DM(J)/(RHO1-RHO0)
      RHO0=RHO1
    1 J=J1
      RHOB(JMP1)=RHOB(JM)
      RETURN
      END


      SUBROUTINE VISTY
C
C  CALCULATES THE VON NEUMANN ARTIFICIAL VISCOSITY
C
      COMMON /ARTVIS/ QP(200)
      COMMON /DENS/ RHOB(200),RHOA(200),DM(200),DMT(200)
      COMMON /INIT/ JM,JMP1,ID
      COMMON /VEL/ UA(200),FJ(200)
C
C     CALCULATION OF THE ARTIFICIAL VISCOSITY
C
      DO 1 J=1,JM
      J1=J+1
      QP(J)=0.0
      IF (RHOB(J).GT.RHOA(J).AND.UA(J1).LT.UA(J))
     1QP(J)=0.5*(RHOA(J)+RHOB(J))*(UA(J1)-UA(J))**2
    1 CONTINUE
      RETURN
      END


      SUBROUTINE ENERGY
C
C  ENERGY TRANSFER WITHOUT THERMAL CONDUCTION
C
      COMMON /ARTVIS/ QP(200)
      COMMON /DENS/ RHOB(200),RHOA(200),DM(200),DMT(200)
      COMMON /ENER/ EB(200),EA(200)
      COMMON /INCRE/ DT,DTA,DTB,DTC,DTD
      COMMON /INIT/ JM,JMP1,ID
      COMMON /INTERN/ A(200),B(200),C(200),D(200)
      COMMON /RADIAL/ RB(200),RA(200),R2B(200),R2A(200)
      COMMON /TIM/ TIME,TTIME,TOTOUT,TOUT
      COMMON /BKDATA/ GAMA,GAMA2
      DO 2 J=1,JM
      X=RHOB(J)/RHOA(J)
      IF (X.GT.2.0) X=2.0
      IF (X.LT.0.5) X=0.5
    2 EB(J)=(EA(J)*(1.0-GAMA2*(1.0-X)/X)-QP(J)/RHOB(J)*(1.0-X))/
     1(1.0+GAMA2*(1.0-X))
      RETURN
      END


      SUBROUTINE TOTEN
C
C  TOTAL ENERGY CHECKS
C
C
C     EVALUATION OF THE TOTAL ENERGY TERMS
C
      COMMON /DENS/ RHOB(200),RHOA(200),DM(200),DMT(200)
      COMMON /ENER/ EB(200),EA(200)
      COMMON /INCRE/ DT,DTA,DTB,DTC,DTD
      COMMON /INIT/ JM,JMP1,ID
      COMMON /RADIAL/ RB(200),RA(200),R2B(200),R2A(200)
      COMMON /TIM/ TIME,TTIME,TOTOUT,TOUT
      COMMON /TOT/ EKINB,EKINA,EINTB,EINTA,ETOTB,ETOTA,ERROR
      COMMON /VEL/ UA(200),FJ(200)
      EKINB=0.0
      J=1
      DO 1 J1=2,JMP1
      EKINB=EKINB+(DM(J)+DM(J1))*UA(J1)**2
    1 J=J1
      EKINB=0.25*EKINB
      EINTB=0.0
      DO 2 J=1,JM
    2 EINTB=EINTB+DM(J)*EB(J)
C
C     ERROR IS ESTIMATED FROM DIFFERENCE BETWEEN ENERGY TERMS BEFORE AND
C     TIME STEP
C
      ETOTB=0.5*(EINTB+EINTA)+EKINB
      ERROR=ETOTB-ETOTA
      IF (ETOTB.GT.1.0E-10) ERROR=ERROR/ETOTB
      RETURN
      END


      SUBROUTINE UPDATE
C
C  UPDATES THE RESULTS OF RUN
C
C
C     THE CURRENT VALUES ARE UPDATED AT THE END OF THE RUN
C
      COMMON /DENS/ RHOB(200),RHOA(200),DM(200),DMT(200)
      COMMON /ENER/ EB(200),EA(200)
      COMMON /INCRE/ DT,DTA,DTB,DTC,DTD
      COMMON /INIT/ JM,JMP1,ID
      COMMON /PRES/ P(200)
      COMMON /RADIAL/ RB(200),RA(200),R2B(200),R2A(200)
      COMMON /TIM/ TIME,TTIME,TOTOUT,TOUT
      COMMON /TOT/ EKINB,EKINA,EINTB,EINTA,ETOTB,ETOTA,ERROR
      COMMON /BKDATA/ GAMA,GAMA2
      DO 2 J=1,JM
      EA(J)=EB(J)
      RHOA(J)=RHOB(J)
    2 P(J)=RHOA(J)*GAMA*EA(J)
      DO 3 J=1,JMP1
      R2A(J)=R2B(J)
    3 RA(J)=RB(J)
      EINTA=EINTB
      EKINA=EKINB
      TIME=TIME+DT
      RETURN
      END
C
C
      BLOCK DATA
      COMMON /ARTVIS/ QP(200)
      COMMON /DENS/ RHOB(200),RHOA(200),DM(200),DMT(200)
      COMMON /ENER/ EB(200),EA(200)
      COMMON /INCRE/ DT,DTA,DTB,DTC,DTD
      COMMON /INIT/ JM,JMP1,ID
      COMMON /PRES/ P(200)
      COMMON /RADIAL/ RB(200),RA(200),R2B(200),R2A(200)
      COMMON /TIM/ TIME,TTIME,TOTOUT,TOUT
      COMMON /TOT/ EKINB,EKINA,EINTB,EINTA,ETOTB,ETOTA,ERROR
      COMMON /VEL/ UA(200),FJ(200)
      COMMON /BKIT/ IT,IOUT
      DATA ETOTA,EINTA,EKINA,TIME,TOTOUT,ERROR,RA(1),RB(1)/8*0.0/,
     1UA,FJ,P,QP,EA,EB/1200*0.0/,RHOA,RHOB,R2A,R2B/800*1.0/,
     2IT/0/,DTC,DTD,DTA/3*0.0/,DM(1)/0.0/
      END
